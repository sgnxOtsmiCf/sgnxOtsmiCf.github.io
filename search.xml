<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>blog搭建日记</title>
    <url>/2021/12/26/blog%E6%90%AD%E5%BB%BA%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>  用来记录我对hexo+next的更改记录，方便以后查询……</p>
<span id="more"></span>
<ol>
<li>点击特效(爱心)</li>
</ol>
<p>​       来源于： <a href="https://www.jianshu.com/p/924b3eea4fa6">这里</a></p>
<ol>
<li><p>看板娘</p>
<p>来源于：<a href="https://afuya.blog.csdn.net/article/details/107341035">这里</a></p>
</li>
</ol>
]]></content>
      <categories>
        <category>日记</category>
      </categories>
  </entry>
  <entry>
    <title>0.618法</title>
    <url>/2021/12/26/0.618%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p> 一种经典的一维搜索方法</p>
<span id="more"></span>
<p>用的集合装，实际应该更简单！</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.sgnxotsmicf.Demo;</span><br><span class="line"><span class="keyword">import</span> java.text.DecimalFormat;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.temporal.ChronoUnit;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo_Number</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span>	<span class="keyword">double</span> T = <span class="number">0.618</span>;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;======0.618法求解最优化问题======&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        ArrayList&lt;Double&gt; Data = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        inPut(sc,Data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">inPut</span><span class="params">(Scanner sc,ArrayList&lt;Double&gt; Data)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入允许误差ε:&quot;</span>);</span><br><span class="line">        <span class="keyword">double</span> c = sc.nextDouble();</span><br><span class="line">        System.out.println(<span class="string">&quot;给定搜索左区间a:&quot;</span>);</span><br><span class="line">        <span class="keyword">double</span> a = sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;给定搜索右区间b:&quot;</span>);</span><br><span class="line">        <span class="keyword">double</span> b = sc.nextInt();</span><br><span class="line">        LocalDateTime startTime = LocalDateTime.now();</span><br><span class="line">        Init(Data,a,b);</span><br><span class="line">        Judge(Data,c);</span><br><span class="line">        LocalDateTime endTime = LocalDateTime.now();</span><br><span class="line">        System.out.println(<span class="string">&quot;迭代时间大约为:&quot;</span>+ChronoUnit.MICROS.between(startTime, endTime)+<span class="string">&quot;微秒&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     ！！！注意：函数在此方法下修改</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">function</span><span class="params">(<span class="keyword">double</span> tempt)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tempt*tempt-tempt+<span class="number">2</span>;<span class="comment">//0.554</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Init</span><span class="params">(ArrayList&lt;Double&gt; Data,<span class="keyword">double</span> a, <span class="keyword">double</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">double</span> L = a+(<span class="number">1</span>-T)*(b-a);</span><br><span class="line">        <span class="keyword">double</span> U = a+T*(b-a);</span><br><span class="line">        <span class="keyword">double</span> L1 = function(L);</span><br><span class="line">        <span class="keyword">double</span> U1 = function(U);</span><br><span class="line">        Data.add(L);<span class="comment">//0</span></span><br><span class="line">        Data.add(U);<span class="comment">//1</span></span><br><span class="line">        Data.add(L1);<span class="comment">//2</span></span><br><span class="line">        Data.add(U1);<span class="comment">//3</span></span><br><span class="line">        Data.add(a);<span class="comment">//4</span></span><br><span class="line">        Data.add(b);<span class="comment">//5</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Judge</span><span class="params">(ArrayList&lt;Double&gt; Data,<span class="keyword">double</span> c)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(Math.abs(Data.get(<span class="number">4</span>)-Data.get(<span class="number">5</span>))&gt;c) &#123;</span><br><span class="line">                <span class="keyword">if</span>(Data.get(<span class="number">2</span>)&lt;Data.get(<span class="number">3</span>)) &#123;</span><br><span class="line">                    Data.set(<span class="number">5</span>, Data.get(<span class="number">1</span>));<span class="comment">//b的值</span></span><br><span class="line">                    Data.set(<span class="number">1</span>, Data.get(<span class="number">0</span>));</span><br><span class="line">                    Data.set(<span class="number">3</span>, Data.get(<span class="number">2</span>));</span><br><span class="line">                    Data.set(<span class="number">0</span>, Data.get(<span class="number">4</span>)+(<span class="number">1</span>-T)*(Data.get(<span class="number">5</span>)-Data.get(<span class="number">4</span>)));</span><br><span class="line">                    <span class="keyword">double</span> tempt = Data.set(<span class="number">0</span>, Data.get(<span class="number">4</span>)+(<span class="number">1</span>-T)*(Data.get(<span class="number">5</span>)-Data.get(<span class="number">4</span>)));</span><br><span class="line">                    Data.set(<span class="number">2</span>, function(tempt));</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    Data.set(<span class="number">4</span>, Data.get(<span class="number">0</span>));<span class="comment">//a的值</span></span><br><span class="line">                    Data.set(<span class="number">0</span>,Data.get(<span class="number">1</span>));</span><br><span class="line">                    Data.set(<span class="number">2</span>,Data.get(<span class="number">3</span>));</span><br><span class="line">                    Data.set(<span class="number">1</span>,Data.get(<span class="number">4</span>)+T*(Data.get(<span class="number">5</span>)-Data.get(<span class="number">4</span>)));</span><br><span class="line">                    <span class="keyword">double</span> tempt = Data.set(<span class="number">1</span>,Data.get(<span class="number">4</span>)+T*(Data.get(<span class="number">5</span>)-Data.get(<span class="number">4</span>)));</span><br><span class="line">                    Data.set(<span class="number">3</span>,function(tempt));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                DecimalFormat sc = <span class="keyword">new</span> DecimalFormat(<span class="string">&quot;0.000&quot;</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;最优解x=&quot;</span>+sc.format((Data.get(<span class="number">4</span>)+Data.get(<span class="number">5</span>))/<span class="number">2</span>));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>最优化方法</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>最优化算法</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown语法及数学公式使用规则</title>
    <url>/2021/12/25/markdown%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E4%BD%BF%E7%94%A8%E8%A7%84%E5%88%99/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><blockquote>
<p><a href="https://www.jianshu.com/p/191d1e21f7ed">这里</a></p>
</blockquote>
<h3 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h3><blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/261750408?utm_source=wechat_session">这里1</a></p>
<p><a href="https://blog.csdn.net/c20182030/article/details/84840373?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1&amp;utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1#LaTexKaTex_26">这里2</a></p>
</blockquote>
<span id="more"></span>
<blockquote>
<p><a href="https://www.cnblogs.com/VincentValentine/p/15419593.html">这里3</a></p>
<p><a href="https://www.jianshu.com/p/e74eb43960a1">这里4</a></p>
<p><a href="https://www.jianshu.com/p/d63887d0c706">箭头集合</a></p>
</blockquote>
<p>…………..</p>
 <img src="/2021/12/25/markdown%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E4%BD%BF%E7%94%A8%E8%A7%84%E5%88%99/1Q7L5JUV5Y7_%60%7B9%7DE_K3N4V.jpg" class="" title="1Q7L5JUV5Y7_&#96;{9}E_K3N4V">
<hr>
]]></content>
      <categories>
        <category>markdown</category>
      </categories>
  </entry>
  <entry>
    <title>二元函数求导</title>
    <url>/2021/12/30/%E4%BA%8C%E5%85%83%E5%87%BD%E6%95%B0%E6%B1%82%E5%AF%BC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p> 单纯的无聊做的，实际一丁点用都没有！</p>
<span id="more"></span>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.sgnxotsmicf.Demo;</span><br><span class="line"></span><br><span class="line"><span class="comment">//二元多项式求导</span></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test0005</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;Double&gt; <span class="keyword">var</span>  = <span class="keyword">new</span> ArrayList&lt;&gt;();<span class="comment">//变量系数</span></span><br><span class="line">        ArrayList&lt;Double&gt; exp  = <span class="keyword">new</span> ArrayList&lt;&gt;();<span class="comment">//幂次幂次</span></span><br><span class="line">        ArrayList&lt;Double&gt; varX1  = <span class="keyword">new</span> ArrayList&lt;&gt;();<span class="comment">//求x1时x2幂次</span></span><br><span class="line">        ArrayList&lt;Double&gt; varX2  = <span class="keyword">new</span> ArrayList&lt;&gt;();<span class="comment">//求x2时x1幂次</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        x1_x2Judge(sc,<span class="keyword">var</span>,exp,varX1,varX2);</span><br><span class="line">        input(<span class="keyword">var</span>,exp,varX1,varX2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">x1_x2Judge</span><span class="params">(Scanner sc,ArrayList&lt;Double&gt; <span class="keyword">var</span>,ArrayList&lt;Double&gt; exp,</span></span></span><br><span class="line"><span class="params"><span class="function">                                   ArrayList&lt;Double&gt; varX1,ArrayList&lt;Double&gt; varX2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i =<span class="number">0</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;输入1对x1求导:&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> instruct1 = sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入关于x&quot;</span>+instruct1+<span class="string">&quot;的项数:&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> number1 = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> tempt =operation(sc,<span class="keyword">var</span>,exp,i,number1,instruct1,varX1,varX2);</span><br><span class="line">        System.out.println(<span class="string">&quot;输入2对x2求导:&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> instruct2= sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入关于x&quot;</span>+instruct2+<span class="string">&quot;的项数:&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> number2 = sc.nextInt();</span><br><span class="line">        operation(sc,<span class="keyword">var</span>,exp,tempt,number2,instruct2,varX1,varX2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">operation</span><span class="params">(Scanner sc,ArrayList&lt;Double&gt; <span class="keyword">var</span>,ArrayList&lt;Double&gt; exp,<span class="keyword">int</span> i,<span class="keyword">int</span> number,<span class="keyword">int</span> instruct,</span></span></span><br><span class="line"><span class="params"><span class="function">                                 ArrayList&lt;Double&gt; varX1,ArrayList&lt;Double&gt; varX2)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> tempt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入第&quot;</span> + (tempt + <span class="number">1</span>) + <span class="string">&quot;个变量系数:&quot;</span>);</span><br><span class="line">            <span class="keyword">var</span>.add(sc.nextDouble());</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入第&quot;</span> + (tempt + <span class="number">1</span>) + <span class="string">&quot;个变量幂次:&quot;</span>);</span><br><span class="line">            exp.add(sc.nextDouble());</span><br><span class="line">            <span class="keyword">if</span> (instruct == <span class="number">1</span>) &#123;</span><br><span class="line">                derivation_Operation(<span class="keyword">var</span>, exp, i);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (instruct == <span class="number">2</span>)&#123;</span><br><span class="line">                derivation_Operation(<span class="keyword">var</span>,exp,i);</span><br><span class="line">            &#125;</span><br><span class="line">            Judge(instruct,sc,varX1,varX2);</span><br><span class="line">            i++;</span><br><span class="line">            tempt++;</span><br><span class="line">        &#125; <span class="keyword">while</span> (tempt &lt; number);</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Judge</span><span class="params">(<span class="keyword">int</span> instruct,Scanner sc,ArrayList&lt;Double&gt; varX1,ArrayList&lt;Double&gt; varX2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (instruct==<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;该x&quot;</span>+instruct+<span class="string">&quot;项(有/无)x2项相乘？&quot;</span>);</span><br><span class="line">            varX1_X2_Operation(sc,varX1);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (instruct==<span class="number">2</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;该x&quot;</span>+instruct+<span class="string">&quot;项(有/无)x1项相乘？&quot;</span>);</span><br><span class="line">            varX1_X2_Operation(sc,varX2);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">varX1_X2_Operation</span><span class="params">(Scanner sc,ArrayList&lt;Double&gt; varX)</span> </span>&#123;</span><br><span class="line">        String answer = sc.next();</span><br><span class="line">        <span class="keyword">if</span> (answer.equals(<span class="string">&quot;有&quot;</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;幂次为多少？&quot;</span>);</span><br><span class="line">            <span class="keyword">double</span> x = sc.nextInt();</span><br><span class="line">            varX.add(x);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (answer.equals(<span class="string">&quot;无&quot;</span>))&#123;</span><br><span class="line">            varX.add(<span class="number">0.0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">input</span><span class="params">(ArrayList&lt;Double&gt; <span class="keyword">var</span>, ArrayList&lt;Double&gt; exp, ArrayList&lt;Double&gt; varX1,ArrayList&lt;Double&gt; varX2)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;变量系数:&quot;</span>+<span class="keyword">var</span>.toString());</span><br><span class="line">        System.out.println(<span class="string">&quot;变量幂次:&quot;</span>+exp.toString());</span><br><span class="line">        System.out.println(<span class="string">&quot;求x1时x2幂次:&quot;</span>+varX1.toString());</span><br><span class="line">        System.out.println(<span class="string">&quot;求x2时x1幂次:&quot;</span>+varX2.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">derivation_Operation</span><span class="params">(ArrayList&lt;Double&gt; <span class="keyword">var</span>,ArrayList&lt;Double&gt; exp,<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">var</span>.get(i)==<span class="number">0</span>||exp.get(i)==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">var</span>.set(i,<span class="number">0.0</span>);</span><br><span class="line">            exp.set(i,<span class="number">0.0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">var</span>.set(i,<span class="keyword">var</span>.get(i)*exp.get(i));</span><br><span class="line">            exp.set(i,exp.get(i)-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>兴趣</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>求导</tag>
      </tags>
  </entry>
  <entry>
    <title>二次型与二次曲面</title>
    <url>/2021/12/30/%E4%BA%8C%E6%AC%A1%E5%9E%8B%E4%B8%8E%E4%BA%8C%E6%AC%A1%E6%9B%B2%E9%9D%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>  来源于网络！！！用来总结复习！！！</p>
<span id="more"></span>
 <div class="pdf-container" data-target="./1.pdf" data-height="550px"></div> 
<div class="pdf-container" data-target="./2.pdf" data-height="550px"></div> 
<div class="pdf-container" data-target="./3.pdf" data-height="550px"></div> 
<div class="pdf-container" data-target="./4.pdf" data-height="550px"></div> 
<div class="pdf-container" data-target="./5.pdf" data-height="550px"></div> 
]]></content>
      <categories>
        <category>高等代数</category>
      </categories>
      <tags>
        <tag>二次型</tag>
        <tag>二次曲面</tag>
      </tags>
  </entry>
  <entry>
    <title>努力学习</title>
    <url>/2021/09/23/%E5%8A%AA%E5%8A%9B%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>想要把平时感兴趣但没有深入了解的数学知识研究透彻，要把这些”兴趣”，或者说学习中的疑难困惑解决清楚，因此特发此篇，以来总结。<br><span id="more"></span></p>
<blockquote>
<p>伯努利数</p>
<p>p级数求和</p>
<p>反常积分求解</p>
<p>留数定理深入学习</p>
<p>拉普拉斯变换</p>
<p>傅里叶变换</p>
<p>lebesgue积分深入</p>
</blockquote>
<p>…..</p>
<hr>
]]></content>
      <tags>
        <tag>兴趣</tag>
      </tags>
  </entry>
  <entry>
    <title>单纯性表</title>
    <url>/2021/12/25/%E5%8D%95%E7%BA%AF%E6%80%A7%E8%A1%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>用来求解线性规划问题</p>
<span id="more"></span>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.sgnxotsmicf.Demo;</span><br><span class="line"><span class="keyword">import</span> java.text.DecimalFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Simplex_Method_Data</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span>[] c;  <span class="comment">// 目标函数中变量xj的价值系数cj</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span>[] pi; <span class="comment">// 检验系数π</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span>[] theta; <span class="comment">// 入基时对应的θ</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span>[] b0; <span class="comment">// 基本可行解中基变量的值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> m; <span class="comment">// 秩</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> n; <span class="comment">// 变量个数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] basicVar; <span class="comment">//用来存储基变量的索引</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="keyword">var</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] MData;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String YN;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span>[][] centreMatrix_Creat(Scanner sc)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入约束矩阵A的秩:&quot;</span>);</span><br><span class="line">        m = sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入约束矩阵变量个数:&quot;</span>); <span class="comment">// 同时也确定了基变量和非基变量的个数</span></span><br><span class="line">        n = sc.nextInt();</span><br><span class="line">        <span class="keyword">double</span>[][]A = <span class="keyword">new</span> <span class="keyword">double</span>[m][n];</span><br><span class="line">         inputA(A,sc);</span><br><span class="line">         <span class="keyword">return</span> A;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用于初始化A</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> A 为初始约束条件系数矩阵</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">inputA</span><span class="params">(<span class="keyword">double</span>[][]A,Scanner sc)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入第&quot;</span>+(i+<span class="number">1</span>)+<span class="string">&quot;行元素:&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                A[i][j] = sc.nextDouble();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 打印单纯性表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printMatrix</span><span class="params">(<span class="keyword">double</span>[][] E)</span></span>&#123;</span><br><span class="line">        DecimalFormat sc = <span class="keyword">new</span> DecimalFormat(<span class="string">&quot;0.00&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            System.out.print(sc.format(b0[i])+<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                System.out.print(sc.format(E[i][j])+(j==n-<span class="number">1</span>?<span class="string">&quot;&quot;</span>:<span class="string">&quot;,&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(<span class="keyword">var</span>+<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            System.out.print(sc.format(pi[j])+(j==n-<span class="number">1</span>?<span class="string">&quot;&quot;</span>:<span class="string">&quot;,&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.sgnxotsmicf.Demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.DecimalFormat;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.temporal.ChronoUnit;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Simplex_Method</span> <span class="keyword">extends</span> <span class="title">Simplex_Method_Data</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;==================单纯形法求解线性规划=================&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 主方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">double</span>[][] A = centreMatrix_Creat(sc);</span><br><span class="line">        Search_XB(sc);</span><br><span class="line">        Init(sc,A);</span><br><span class="line">        LocalDateTime startTime = LocalDateTime.now();</span><br><span class="line">        LogicLoopJudge(A);</span><br><span class="line">        LocalDateTime endTime = LocalDateTime.now();</span><br><span class="line">        IterationTime(startTime,endTime);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *用于计算迭代时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> startTime 迭代前时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> endTime  迭代后时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">IterationTime</span><span class="params">(LocalDateTime startTime, LocalDateTime endTime)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;迭代时间大约为:&quot;</span>+ ChronoUnit.MILLIS.between(startTime, endTime)+<span class="string">&quot;毫秒&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">LogicLoopJudge</span><span class="params">(<span class="keyword">double</span>[][] A)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> number = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> tempt = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> negativeIndex = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pi.length; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (pi[i]&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">                    tempt++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (pi[i]&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; m;j++)&#123;</span><br><span class="line">                        <span class="keyword">if</span> (A[j][i]&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">                            negativeIndex++;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (negativeIndex ==m)&#123;</span><br><span class="line">                        System.out.println(<span class="string">&quot;此线性规划问题无最优解！&quot;</span>);</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (tempt == n)&#123;</span><br><span class="line">                printResult(A,number);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 开始操作；</span></span><br><span class="line">            System.out.println(<span class="string">&quot;=================开始第&quot;</span>+(number+<span class="number">1</span>)+<span class="string">&quot;次迭代================&quot;</span>);</span><br><span class="line">            <span class="keyword">int</span> index = IntoBaseVar_Judge();<span class="comment">//入基索引</span></span><br><span class="line">            UpDataTheta(A,index);</span><br><span class="line">            <span class="keyword">int</span> index2 = OutOfBaseVar_Judge(index);<span class="comment">//出基索引</span></span><br><span class="line">            RotationTransformation(A,index,index2);</span><br><span class="line">            number++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *用于A的旋转变化，更新A</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index 入基变量</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index2 出基变量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">RotationTransformation</span><span class="params">(<span class="keyword">double</span>[][] A,<span class="keyword">int</span> index,<span class="keyword">int</span> index2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (A[index2][index] != <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">double</span> positiveFactor = A[index2][index];</span><br><span class="line">            <span class="comment">//A[index2][index] = 1;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                A[index2][j] /= positiveFactor; <span class="comment">//初等行变化</span></span><br><span class="line">            &#125;</span><br><span class="line">            b0[index2] /= positiveFactor;</span><br><span class="line">        &#125;</span><br><span class="line">        RotatingCenter(A,index,index2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">RotatingCenter</span><span class="params">(<span class="keyword">double</span>[][] A, <span class="keyword">int</span> index, <span class="keyword">int</span> index2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (A[i][index]!=<span class="number">0</span> &amp;&amp; i!=index2)&#123;</span><br><span class="line">                <span class="keyword">double</span> factor = -A[index2][index]*A[i][index];</span><br><span class="line">                <span class="keyword">double</span> b0_factor = factor*b0[index2];</span><br><span class="line">                b0[i] += b0_factor;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                    <span class="keyword">double</span> A_factor = A[index2][j]*factor;</span><br><span class="line">                    A[i][j] += A_factor;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">double</span> factor = -A[index2][index]*pi[index];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="keyword">double</span> pi_factor = factor*A[index2][j];</span><br><span class="line">            pi[j] += pi_factor;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printResult</span><span class="params">(<span class="keyword">double</span>[][] A,<span class="keyword">int</span> number)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">           <span class="keyword">var</span> += c[basicVar[i]]*b0[i];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;======================循环结束======================&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;最优值为:&quot;</span>+<span class="keyword">var</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;最优解为:&quot;</span>);</span><br><span class="line">        <span class="keyword">boolean</span> logic = OptimalSolution();</span><br><span class="line">        <span class="keyword">if</span> (!logic)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;基向量为:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j : basicVar) &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;x&quot;</span> + (j + <span class="number">1</span>)+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">&quot;迭代次数:&quot;</span>+number);</span><br><span class="line">        System.out.println(<span class="string">&quot;最后一步单纯形表为:&quot;</span>);</span><br><span class="line">        printMatrix(A);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">OptimalSolution</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DecimalFormat sc = <span class="keyword">new</span> DecimalFormat(<span class="string">&quot;0.00&quot;</span>);</span><br><span class="line">        String[] OptimalSData = <span class="keyword">new</span> String[n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; basicVar.length; i++) &#123;</span><br><span class="line">            OptimalSData[basicVar[i]] = sc.format(b0[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; OptimalSData.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (OptimalSData[i] == <span class="keyword">null</span>)&#123;</span><br><span class="line">                OptimalSData[i] = <span class="string">&quot;0.00&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Arrays.toString(OptimalSData));</span><br><span class="line">        <span class="comment">//0.25 0 0 1 0 -0.25   -2 0 -1 0 1 -3    1 1 0 0 0 1   1.5 6 10   2 3 0 0 10000 10000</span></span><br><span class="line">        <span class="keyword">if</span> (YN.equals(<span class="string">&quot;yes&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> mDatum : MData) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (mDatum == basicVar[j] &amp;&amp; b0[j] != <span class="number">0</span>) &#123;</span><br><span class="line">                        System.out.println(<span class="string">&quot;由于最优解中存在正的人工变量，则原问题是不可行的&quot;</span>);</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index 为入基索引</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回出基索引</span></span><br><span class="line"><span class="comment">     * 使用的是Dantzig出基规则</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">OutOfBaseVar_Judge</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> index2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (theta[index2]&gt;theta[i])&#123;</span><br><span class="line">                index2 = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;出基变量为:x&quot;</span>+((basicVar[index2]+<span class="number">1</span>)));</span><br><span class="line">        basicVar[index2] = index;</span><br><span class="line">        <span class="keyword">return</span> index2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回的是入基索引</span></span><br><span class="line"><span class="comment">     * 使用的是Dantzig入基规则</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">IntoBaseVar_Judge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (pi[index]&lt;pi[i])&#123;</span><br><span class="line">                index = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;入基变量为:x&quot;</span>+(index+<span class="number">1</span>));</span><br><span class="line">        <span class="keyword">return</span> index;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用于更新θ</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index 入基变量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">UpDataTheta</span><span class="params">(<span class="keyword">double</span>[][] A,<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">            theta = <span class="keyword">new</span> <span class="keyword">double</span>[m];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (A[i][index]&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">                theta[i] = <span class="number">1000</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            theta[i] = b0[i]/A[i][index];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 搜索单位矩阵</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Search_XB</span><span class="params">(Scanner sc)</span> </span>&#123;</span><br><span class="line">        basicVar = <span class="keyword">new</span> <span class="keyword">int</span>[m];</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入单位矩阵所对应的&quot;</span>+m+<span class="string">&quot;个初始基变量的下标:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> tempt = sc.nextInt();</span><br><span class="line">            basicVar[i] = (tempt-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;基变量为:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j : basicVar) &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;x&quot;</span> + (j + <span class="number">1</span>) + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数据初始化</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Init</span><span class="params">(Scanner sc,<span class="keyword">double</span>[][] A)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> MJudge = TheBigMMethod(sc);</span><br><span class="line">        <span class="comment">// 初始化基变量的值</span></span><br><span class="line">        b0 = <span class="keyword">new</span> <span class="keyword">double</span>[m];</span><br><span class="line">        <span class="keyword">if</span> (MJudge == <span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入人工变量的个数:&quot;</span>);</span><br><span class="line">            <span class="keyword">int</span> M = sc.nextInt();</span><br><span class="line">             MData= <span class="keyword">new</span> <span class="keyword">int</span>[M];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入第&quot;</span>+(i+<span class="number">1</span>)+<span class="string">&quot;个人工变量下标:&quot;</span>);</span><br><span class="line">                <span class="keyword">int</span> tempt = sc.nextInt();</span><br><span class="line">                MData[i] = (tempt-<span class="number">1</span>); <span class="comment">//人工变量索引</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入基本可行解中基变量的初始值:&quot;</span>); <span class="comment">//等于B^-1*b ---基于初始单位阵I</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            b0[i] = sc.nextDouble();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 初始化 价值系数c</span></span><br><span class="line">        c = <span class="keyword">new</span> <span class="keyword">double</span>[n];</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入目标函数中变量xj的价值系数cj:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            c[i] = sc.nextDouble();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始检验数</span></span><br><span class="line">        initPi(A);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 大M法判断</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回判断逻辑</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">TheBigMMethod</span><span class="params">(Scanner sc)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;是否有人工变量？(yes/no)&quot;</span>);</span><br><span class="line">        String MJudge = sc.next();</span><br><span class="line">        YN = MJudge;</span><br><span class="line">        <span class="keyword">if</span> (MJudge.equals(<span class="string">&quot;yes&quot;</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;==================下面进行大M法求解线性最优化问题=============&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *初始化检验数π</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initPi</span><span class="params">(<span class="keyword">double</span>[][] A)</span> </span>&#123;</span><br><span class="line">        pi = <span class="keyword">new</span> <span class="keyword">double</span>[n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">                    pi[i] += c[basicVar[j]]*A[j][i];</span><br><span class="line">                &#125;</span><br><span class="line">            pi[i] -= c[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>最优化方法</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>最优化算法</tag>
        <tag>线性规划</tag>
      </tags>
  </entry>
  <entry>
    <title>可逆矩阵的一些性质(一)</title>
    <url>/2021/12/30/%E5%8F%AF%E9%80%86%E7%9F%A9%E9%98%B5%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%A7%E8%B4%A8(%E4%B8%80)/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ol>
<li><p>可逆矩阵，说明该方阵各向量线性无关，因为如果各向量线性相关，就不可能是可逆矩阵。</p>
<span id="more"></span>
</li>
<li><p>如果一个方阵乘以非零向量，结果是0向量，那么说明以该非零向量各元素为系数，和该方阵各行向量相乘后相加，能得到0向量。<br>而非零向量的元素不能全部为0<br>所以就说明存在一组不全为0的系数，使得系数和行向量相乘后相加，结果为0向量。<br>这就说明行向量线性相关（线性相关的定义）<br>所以就不是可逆矩阵。<br><em>因此可逆矩阵乘以一个非零向量的结果不可能是0向量</em></p>
</li>
</ol>
]]></content>
      <categories>
        <category>高等代数</category>
      </categories>
      <tags>
        <tag>矩阵</tag>
      </tags>
  </entry>
  <entry>
    <title>反证法中“矛盾导出”的几种类型总结</title>
    <url>/2021/09/14/%E5%8F%8D%E8%AF%81%E6%B3%95%E4%B8%AD%E2%80%9C%E7%9F%9B%E7%9B%BE%E5%AF%BC%E5%87%BA%E2%80%9D%E7%9A%84%E5%87%A0%E7%A7%8D%E7%B1%BB%E5%9E%8B%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>说来汗颜！作为数学专业的学生，要不是做题我还发现不了，我连反证法的一些基本概念都不清楚（也可能是忘了）。总之，就是离谱，花了一些时间，终于把知识找了回来，也copy了一些非常重要的知识点——反证法中“矛盾导出”的几种类型<br><span id="more"></span></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>反证法是一种由假推真的证明方法，其实质是运用“正难则反、以退为进”的策略，从否定结论入手，先作出与求证结论相反的假设，然后经过一系列严谨、合乎逻辑的推理论证，导出矛盾结论，最后由矛盾断定假设不成立，肯定原结论成立.在用反证法推出矛盾的推导过程中，导出的矛盾有如下几种类型：与已知条件矛盾;与已知的公理、定义、定理、公式矛盾;与假设矛盾;自相矛盾.</p>
<blockquote>
<p>类型一：导出与公式定理的矛盾</p>
</blockquote>
<p>与公式定理矛盾即在运用反证法求证数学问题时，经过一番逻辑推理后，所推导出的<br>结论与已知的数学性质、公式、定理、法则等相矛盾，从而得出假设错误，原结论正确.</p>
<blockquote>
<p>类型二：导出与已知条件的矛盾</p>
</blockquote>
<p>与已知条件矛盾即在运用反证法求证数学问题时，所推导出的结论与题设已知条件相矛盾，进而断定假设不真，原求证结论成立. </p>
<blockquote>
<p>类型三：导出与自身假设的矛盾</p>
</blockquote>
<p>与自身假设矛盾即在运用反证法时，经过逻辑推理后，所推导出的结论与假设相互矛盾，由此否定假设，肯定原结论成立，</p>
<blockquote>
<p>类型四：导出两个结论自相矛盾</p>
</blockquote>
<p>两个结论自相矛盾即在运用反证法证明时，经过一系列严密的逻辑推理后，所推导出的两个结论自相矛盾，从而有效证明原命题的正确性.</p>
<h2 id="一道题"><a href="#一道题" class="headerlink" title="一道题"></a>一道题</h2><p><img src="https://i.loli.net/2021/09/14/uWsm5S2oEV97HRr.jpg" alt="QQ图片20210914225548.jpg"><br>很明显，这是类型四的矛盾！</p>
]]></content>
      <categories>
        <category>总结</category>
      </categories>
      <tags>
        <tag>反证法</tag>
      </tags>
  </entry>
  <entry>
    <title>很叼的猜拳游戏</title>
    <url>/2021/10/08/%E5%BE%88%E5%8F%BC%E7%9A%84%E7%8C%9C%E6%8B%B3%E6%B8%B8%E6%88%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="https://cdn.mathpix.com/snip/images/pYX6MuIpPsS7tB3CpbeeuHjI_hrr9M5UdpfYzmbGKdA.original.fullsize.png" alt=""><br><span id="more"></span></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="built_in">input</span>(<span class="string">&quot;游戏规则:输入1代表出&lt;拳头&gt; 输入2代表出&lt;剪刀&gt; 输入3代表出&lt;布&gt;&quot;</span></span><br><span class="line">      <span class="string">&quot;\n       按回车继续......&quot;</span>)</span><br><span class="line"><span class="built_in">input</span>(<span class="string">&quot;胜负关系为:1&gt;2 2&gt;3 3&gt;1\n按回车开始游戏......&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;----------------------------------------------------------------------&quot;</span>)</span><br><span class="line">number = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入比赛回合:&quot;</span>))</span><br><span class="line">i = <span class="number">1</span></span><br><span class="line">win = <span class="number">0</span></span><br><span class="line">lose = <span class="number">0</span></span><br><span class="line">noun = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt;= number:</span><br><span class="line">    user = <span class="built_in">input</span>(<span class="string">&quot;请输入需要出的拳:石头(1)/剪刀(2)/布(3):&quot;</span>)</span><br><span class="line">    user = <span class="built_in">eval</span>(user)</span><br><span class="line">    computer = random.randint(<span class="number">1</span>, <span class="number">300</span>)  <span class="comment"># 随机产生1-300之间的随机整数</span></span><br><span class="line">    h = number - i</span><br><span class="line">    <span class="keyword">if</span> user == <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot; 你出石头:%d&quot;</span> % user)</span><br><span class="line">    <span class="keyword">elif</span> user == <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot; 你出剪刀:%d&quot;</span> % user)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot; 你出布: %d&quot;</span> % user)</span><br><span class="line">    <span class="keyword">if</span> (computer &gt;= <span class="number">1</span>) <span class="keyword">and</span> computer &lt;= <span class="number">100</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;电脑出石头:1 --(%d)&quot;</span> % computer)</span><br><span class="line">    <span class="keyword">elif</span> (computer &gt; <span class="number">100</span>) <span class="keyword">and</span> computer &lt;= <span class="number">200</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;电脑出剪刀:2 --(%d)&quot;</span> % computer)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot; 电脑出布:3 --(%d)&quot;</span> % computer)</span><br><span class="line">    <span class="comment"># print(&quot;-----规则:1&gt;2 2&gt;3 3&gt;1-----&quot;)</span></span><br><span class="line">    <span class="keyword">if</span> (user == <span class="number">1</span> <span class="keyword">and</span> ((computer &gt;= <span class="number">1</span>) <span class="keyword">and</span> computer &lt;= <span class="number">100</span>)) <span class="keyword">or</span> (</span><br><span class="line">            user == <span class="number">2</span> <span class="keyword">and</span> ((computer &gt; <span class="number">100</span>) <span class="keyword">and</span> computer &lt;= <span class="number">200</span>)) <span class="keyword">or</span> (</span><br><span class="line">            user == <span class="number">3</span> <span class="keyword">and</span> ((computer &gt; <span class="number">200</span>) <span class="keyword">and</span> computer &lt;= <span class="number">300</span>)):</span><br><span class="line">        noun = <span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;本回合平局!无胜负关系，重新再来!&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> user == <span class="number">1</span> <span class="keyword">and</span> (computer &gt; <span class="number">100</span>) <span class="keyword">and</span> computer &lt;= <span class="number">200</span> <span class="keyword">or</span> user == <span class="number">2</span> <span class="keyword">and</span> (</span><br><span class="line">            computer &gt; <span class="number">200</span>) <span class="keyword">and</span> computer &lt;= <span class="number">300</span> <span class="keyword">or</span> user == <span class="number">3</span> <span class="keyword">and</span> (computer &gt;= <span class="number">1</span>) <span class="keyword">and</span> computer &lt;= <span class="number">100</span>:</span><br><span class="line">        noun = <span class="number">0</span></span><br><span class="line">        win += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> h == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;本回合你赢了!回合结束,正在计算胜负关系......&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> win == <span class="built_in">int</span>(number / <span class="number">2</span> + <span class="number">1</span>):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;本回合你赢了!回合结束,正在计算胜负关系......&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;本回合你赢了!但别太高兴，你只赢了<span class="subst">&#123;win&#125;</span>个回合-----------------------还剩<span class="subst">&#123;h&#125;</span>个回合!&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> win == <span class="built_in">int</span>(number / <span class="number">2</span> + <span class="number">1</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;----------------------------------------------------------------------&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;好吧，你赢了，<span class="subst">&#123;number&#125;</span>局游戏赢了<span class="subst">&#123;win&#125;</span>局!&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;恭喜你!成功赢了电脑!牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛!&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        noun = <span class="number">0</span></span><br><span class="line">        lose += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> h == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;本回合你输了!回合结束，正在计算胜负关系......&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;本回合你输了!菜狗，电脑都赢不了，你已经输了<span class="subst">&#123;lose&#125;</span>回合了-----------------------还剩<span class="subst">&#123;h&#125;</span>个回合&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;----------------------------------------------------------------------&quot;</span>)</span><br><span class="line">    <span class="comment"># if (i == number) and (win &gt;= 0 and win &lt; number/2):</span></span><br><span class="line">    <span class="comment">#     print(f&quot;&#123;number&#125;次比赛你只赢了&#123;win&#125;个回合，你输了!&quot;)</span></span><br><span class="line">    <span class="keyword">if</span> lose == <span class="built_in">int</span>(number / <span class="number">2</span> + <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;很遗憾，你输了!&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;number&#125;</span>个回合你已经输了<span class="subst">&#123;lose&#125;</span>个回合了，我奶奶玩都比你强!&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">elif</span> (i == number) <span class="keyword">and</span> win == number / <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;number&#125;</span>个回合你只赢了<span class="subst">&#123;win&#125;</span>个回合:平局!&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> noun == <span class="number">1</span>:</span><br><span class="line">        i = i</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        i += <span class="number">1</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>小游戏</category>
      </categories>
      <tags>
        <tag>while逻辑运算符</tag>
        <tag>if逻辑运算符</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>很简单的一道题</title>
    <url>/2021/09/20/%E5%BE%88%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%80%E9%81%93%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>预定31号题！非数竞赛一道题，第一次做没想到（+1）</p>
<span id="more"></span>
<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>设区间$\big(0,+\infty)$上的函数$u(x)$定义为：$u(x)=\int^{+\infty}_{0}{e^{-xt^{2}}{dt}}$，则$u(x)$的初等函数表达式为$?$</p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这道题的核心就是二重积分，直接求导(利用原函数存在定理)和求积分显然是不可取的。</p>
<p>我们可以人为的再建立一个$u(x)=\int^{+\infty}_{0}{e^{-xm^2}{dm}}$,这种形式是可以存在的，下来就简单了…</p>
<h3 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h3><p>通过运算使得$u^2(x)=\iint_{s}{e^{-x\big(t^2+m^2)}dtdm}$ ,     其中$t\in \big(0,+\infty)$     $m\in \big(0,+\infty)$</p>
<p>因为被积函数中有平方和，因此利用极坐标解该二重积分：</p>
<p>$\begin{cases}t=rcos{\theta}\\m=rsin{\theta}\end{cases}$</p>
<p>$u^2(x)=\int^{\frac{\pi}{2}}_{0}d\theta\int^{+\infty}_{0}re^{-xr^2}dr=\frac{\pi}{2x}\int^{+\infty}_{0}{e^{-xr^2}}d\big(xr^2)={\frac{\pi}{2x}}{\int^{+\infty}_{0}e^{-p}dp}$ </p>
<p> $p=xr^{2}$</p>
<p>解得$u^{2}(x)=-\frac{\pi}{2x}$</p>
<p>则$u(x)=\sqrt{-\frac{\pi}{2x}}$</p>
<p>完毕！</p>
]]></content>
      <categories>
        <category>积分</category>
      </categories>
      <tags>
        <tag>积分</tag>
        <tag>二重积分</tag>
      </tags>
  </entry>
  <entry>
    <title>极限1</title>
    <url>/2021/09/13/%E6%9E%81%E9%99%901/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p> 这道题有点难受，最后一步诱导性极强，我(本人)每一次第一反应都tm是0！<br><span id="more"></span></p>
<script type="math/tex; mode=display">
\text { 求 } \lim _{x \rightarrow 0}\left(\frac{(1+x)^{\frac{1} {x} } } {(1+\sin x)^{\frac{1} {\sin x} } }\right)^{\frac{1} {x^{3} } }</script><p>这道题我认为诱导性很强（对我），题本身不难，但每次快写出来的时候就会被各种各样的问题卡住了。要不是cosx没有及时化简掉；要不就是在最后一步，最简单的等价无穷小代换我竟然忘掉了，不是忘掉了某个公式，而是压根就没有想起来，神奇！</p>
<h3 id="求解过程"><a href="#求解过程" class="headerlink" title="求解过程"></a>求解过程</h3><p><img src="https://cdn.mathpix.com/snip/images/Nu9orVKInkJHQp1_y4EaBqBE5EW9-7-lT3ISsMEaSTE.original.fullsize.png" alt=""></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>在倒数第二步，也就是”三项分开解”上一行，每次算到这里我都会”失忆“，什么泰勒公式呀、等价无穷小替换呀、洛必达呀都选择性失忆了，只剩下个鸡蛋”0“了!</p>
<p>~好吧，从根本上（解题方式上）我的感性思维占的更多一点吧，导致每每造成这种不是失误的失误。我想，每一步都应该规范在数学知识的框架上！</p>
<p><em>不是吗？</em></p>
<hr>
<p>请看这里：<a href="https://www.bilibili.com/video/BV1Qs411J7QQ?p=30&amp;spm_id_from=pageDriver">有个好东西！</a></p>
]]></content>
      <categories>
        <category>极限</category>
      </categories>
      <tags>
        <tag>极限</tag>
      </tags>
  </entry>
  <entry>
    <title>降阶公式与矩阵秩的性质</title>
    <url>/2021/12/26/%E9%99%8D%E9%98%B6%E5%85%AC%E5%BC%8F%E4%B8%8E%E7%9F%A9%E9%98%B5%E7%A7%A9%E7%9A%84%E5%85%AC%E5%BC%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="降阶公式"><a href="#降阶公式" class="headerlink" title="降阶公式"></a>降阶公式</h3><script type="math/tex; mode=display">
\begin{vmatrix}{\lambda}{E_{m}-AB}\end{vmatrix}={\lambda}^{m-n}\begin{vmatrix}{\lambda}{E_{n}}{-BA}\end{vmatrix}</script><p>其中$E_{m}{}$ 、 $E_{n}$分别为$m阶、n阶$单位阵</p>
<span id="more"></span>
<h3 id="矩阵秩的性质"><a href="#矩阵秩的性质" class="headerlink" title="矩阵秩的性质"></a>矩阵秩的性质</h3><ol>
<li><p>$0{\le}{R(A)}{\le}{min}${$m,n$}</p>
</li>
<li><p>$\begin{cases}0,k=0 \\ {R(A)},k{\not=0}<br> \end{cases}$​</p>
</li>
<li><p>$R(A_1){\le}{R(A)}$   其中，$A_1是A的子矩阵$</p>
</li>
<li><p>$R(A^T)=R(A)$  其中，$A^T是A的转置$</p>
</li>
<li><p>$A{\rightarrow}^{初等变换}{\rightarrow}B{\Rightarrow}{R(A)=R(B)}$</p>
</li>
<li><p>$R\begin{pmatrix}A&amp;0 \\ 0&amp;B\end{pmatrix}$记$R(A)=r_1{\quad} R(B)=r_2$</p>
<p>= $r_1+r_2$</p>
</li>
<li><p>$R(A,B)\le{R(A)+R(B)}$</p>
</li>
<li><p>$R(A+B)\le{R(A)+R(B)}$</p>
</li>
<li><p>$R(AB)\le{min\{ R\big(A),R\big(B)\}}$</p>
</li>
<li><p>$\cal<strong>重点</strong>:$</p>
<p>设$A\in{F^{m\times{n}}},B\in{F^{m\times{n}}}$</p>
<p>$R(A)+R(B)-n\le{R\big(AB)}\le{min\{R(A),R(B)\}}$</p>
<p>特别地，若$AB=0$,则</p>
<p>$R(A)+R(B)\le{n}$</p>
</li>
</ol>
]]></content>
      <categories>
        <category>高等代数</category>
      </categories>
      <tags>
        <tag>矩阵</tag>
        <tag>公式</tag>
        <tag>秩</tag>
      </tags>
  </entry>
  <entry>
    <title>第二积分中值定理</title>
    <url>/2021/12/22/%E7%AC%AC%E4%BA%8C%E7%A7%AF%E5%88%86%E4%B8%AD%E5%80%BC%E5%AE%9A%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>定理、证明、例题————复习</p>
<p>来源于网络！！！</p>
<span id="more"></span>
<h2 id="证明"><a href="#证明" class="headerlink" title="证明"></a>证明</h2><p>设 $f(x)$ 在 $[a, b]$ 上可积， $g(x)$ 在 $[a, b]$ 上单调，则存在 $\xi \in[a, b]$ ，使得</p>
<script type="math/tex; mode=display">
\int_{a}^{b} f(x) g(x) d x=g(a) \int_{a}^{\xi} f(x) d x+g(b) \int_{\xi}^{b} f(x) d x .</script><p>这个定理的推导比较复杂，牵扯到积分上限函数: $\varphi(x)=\int f(t) d t$ 。以下用 $\int_{a}^{b} f(x) d x$ 表示从 $\mathrm{a}$ 到 $\mathrm{b}$ 的定积分。 首先需要证明，若函数 $f(x)$ 在 $[a, b]$ 内可积分，则 $\Phi(x)$ 在此区间内为一连续函数。</p>
<p>证明: 设 $F(x)=\int_{a}^{x} f(t) d t$, 则 $\int_{a}^{b} f(x) g(x) d x=\int_{a}^{b} g(x) d F(x)=\left.g(x) F(x)\right|_{a} ^{b}-\int_{a}^{b} F(x) g^{\prime}(x) d x$ $=g(b) \int_{a}^{b} f(x) d x-\int_{a}^{b} F(x) g^{\prime}(x) d x,\left(F(x)=\int_{a}^{x} f(t) d t\right) .$</p>
<p>因 $g^{\prime}(x)$ 在 $[a, b]$ 上不变号，则由积分第一中值定理知，在 $[a, b]$ 上至少存在一点 $\xi ，$ 使得 $\int_{a}^{b} F(x) g^{\prime}(x) d x=F(\xi) \int_{a}^{b} g^{\prime}(x) d x=F(\xi)[g(b)-g(a)] .$</p>
<p>于是，有</p>
<script type="math/tex; mode=display">
\begin{gathered}
\left.\int_{a}^{b} f(x) g(x) d x=g(b) \int_{a}^{b} f(x) d x-[g(b)]-g(a)\right] F(\xi) \\
=g(b) \int_{a}^{b} f(x) d x-[g(b)-g(a)] \int_{a}^{\xi} f(x) d x \\
=g(b)\left[\int_{a}^{b} f(x) d x-\int_{a}^{\xi} f(x) d x\right]+g(a) \int_{a}^{\xi} f(x) d x \\
=g(b) \int_{\xi}^{b} f(x) d x+g(a) \int_{a}^{\xi} f(x) d x, \\
\text { 即 } \int_{a}^{b} f(x) g(x) d x=g(a) \int_{a}^{\xi} f(x) d x+g(b) \int_{\xi}^{b} f(x) d x, \text { 得证。 }
\end{gathered}</script><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><ol>
<li>定理的直接应用<br>例1. 设 $f(x)$ 在 $[a, b]$ 上可积,$g(x)$ 在 $[a, b]$ 上单调递增且非负,在 $a, b$ 处连续,那么在 $[a, b]$ 上存在 $\xi$,使$\int_{a}^{b} f(x) g(x) d x=f(b) \int_{\xi}^{b} f(x) d x .$</li>
</ol>
<script type="math/tex; mode=display">
\begin{aligned}
&\text { 证 明 : 令 } \mathrm{x}=\mathrm{b}-\mathrm{t}, g(b-t)=h(t) \int_{0}^{b-a} f(b-t) h(t) d(t) \text {, 因为 } \mathrm{h}(\mathrm{t}) \text { 非负且单调递减 }(0<\mathrm{t}<\mathrm{b}-\mathrm{a}) \text { 利用公式有 } \\
&\int_{0}^{b-a} f(b-t) h(t) d t=h(0) \int_{0}^{\gamma} f(b-t) d t=g(b) \int_{b-\gamma}^{b} f(x) d x(0<\gamma<b-a) \text {, 而 } \mathrm{a}<\xi<\mathrm{b}-\gamma \text { ，即 } \\
&\int_{a}^{b} f(x) g(x) d x=f(b) \int_{\xi}^{b} f(x) d x .
\end{aligned}</script><ol>
<li>积分第二中值定理在证明不等式中的应用<br>例2. 证明 $x&gt;0$ 时， $\left|\int_{x}^{x+e} \sin t^{2} d t\right| \leq \frac{1}{x}$.<br>证明:取 $u=t^{2}, t=\sqrt{u}, d t=\frac{d u}{2 \sqrt{u}}$, 由积分中值定理和它的推论可得:</li>
</ol>
<script type="math/tex; mode=display">
\left|\int_{x}^{x+\tau} \sin t^{2} d t\right|=\left|\int_{x}^{x+\tau} \frac{\sin u}{2 \sqrt{u}} d u\right|=\frac{1}{2 \sqrt{x^{2}}} \int_{x^{2}}^{\gamma} \sin u d u=\frac{1}{2 x}\left(\cos x^{2}-\cos \gamma\right) \leq \frac{2}{2 x}=\frac{1}{x} .</script><ol>
<li>积分中值定理在极限中的应用<br>例3.证明极限 $\lim _{n \rightarrow \infty} \frac{x^{n}}{1+x} d x=0$.<br>证明: 由积分中值定理和它的推论可得:令 $f(x)=\frac{1}{1+x}, g(x)=x^{n}$,<br>令可知 $g(x)$ 在 $[0,1]$ 上连续,而且不变号。所以存在 $\xi$ 使得 $\int_{0}^{1} f(x) g(x) d x=f(\xi) \int_{0}^{1} g(x) d x$, 因此有以下式子<br>$0 \leq \int_{0}^{1} \frac{x^{n}}{1+x} d x=\frac{1}{1+\xi} \int_{0}^{1} x^{n} d x=\frac{1}{(n+1)(1+\xi)} \leq \frac{1}{n+1} \rightarrow 0 \rightarrow \lim _{n \rightarrow \infty} \int_{0}^{1} \frac{x^{n}}{1+x} d x=0$</li>
</ol>
]]></content>
      <categories>
        <category>积分</category>
      </categories>
      <tags>
        <tag>第二积分中值定理</tag>
      </tags>
  </entry>
  <entry>
    <title>阻尼Newton法</title>
    <url>/2021/12/25/%E9%98%BB%E5%B0%BCNewton%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>  一般用来寻找二元函数最优解</p>
<span id="more"></span>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ZN_Newton</span><span class="params">(fun,x0,epsilon)</span></span></span><br><span class="line"><span class="comment">% 阻尼Newton法</span></span><br><span class="line"><span class="comment">%  fun = (1-x1)^2+2*(x2-x1^2)^2; x0 = [0;0]; epsilon = 0.1;</span></span><br><span class="line"><span class="comment">%  fun = (x1-1)^4+(x1-x2)^2; x0 = [0;0]; epsilon = 10^-6;</span></span><br><span class="line"><span class="comment">%  fun =  x1^2+x2^2-3*x1-x1*x2; x0 =[0;0];epsilon = 0.1;</span></span><br><span class="line"><span class="comment">%  fun =  (x1-2)^2+(x1-2*x2)^2; x0 =[0;3];epsilon = 0.4;</span></span><br><span class="line"><span class="comment">% clear;clc</span></span><br><span class="line"><span class="comment">% by -- 2021.12.9 -- cn.sgnxotsmicf.Lx</span></span><br><span class="line">clc</span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&#x27;==================阻尼Newton法==================&#x27;</span>)</span><br><span class="line">syms x1 x2</span><br><span class="line">n = <span class="built_in">length</span>(x0); <span class="comment">% 解的长度</span></span><br><span class="line">k = <span class="number">0</span>;    <span class="comment">% 迭代次数</span></span><br><span class="line"><span class="comment">% 初始化值</span></span><br><span class="line">grad_f = [diff(fun,x1);diff(fun,x2)];</span><br><span class="line">Hesse = hessian(fun,[x1,x2]);</span><br><span class="line">x = <span class="built_in">zeros</span>(n,<span class="number">10</span>); </span><br><span class="line">y = <span class="built_in">zeros</span>(n,<span class="number">10</span>);</span><br><span class="line">index = <span class="number">1</span>;  <span class="comment">% 索引</span></span><br><span class="line">x(:,index) = x0;</span><br><span class="line"><span class="comment">% 进入迭代逻辑</span></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">true</span>)</span><br><span class="line">    syms lamuda <span class="built_in">real</span></span><br><span class="line">    gk = subs(grad_f,[x1;x2],x(:,index));</span><br><span class="line">    gk = double(gk);</span><br><span class="line">    gk_Hesse = subs(Hesse,[x1;x2],x(:,index));</span><br><span class="line">    y(:,index) = gk;</span><br><span class="line">    <span class="keyword">if</span>(norm(gk) &gt; epsilon) <span class="comment">% 精度判断</span></span><br><span class="line">        dk = - gk_Hesse^<span class="number">-1</span> * gk;</span><br><span class="line">        f1 = subs(fun,[x1;x2],x(:,index)+lamuda * dk);</span><br><span class="line">        f1 = diff(f1);</span><br><span class="line">        lamuda = solve(f1);      </span><br><span class="line">                lamuda = <span class="built_in">max</span>(lamuda); <span class="comment">% 进入实数循环</span></span><br><span class="line">                 <span class="keyword">if</span>(lamuda ~= <span class="number">0</span>)</span><br><span class="line">                      x(:,index+<span class="number">1</span>) = x(:,index) + lamuda*dk;</span><br><span class="line">                 <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                 <span class="keyword">end</span>      </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line"> <span class="comment">% 迭代结束进行输出</span></span><br><span class="line">     val = x(:,index);</span><br><span class="line">     fprintf(<span class="string">&#x27;阻尼Newton所求的函数为:%s\n迭代次数为;%d次\n&#x27;</span>,fun,k)</span><br><span class="line">     str = [<span class="string">&#x27;最优解为:[&#x27;</span>,num2str(val&#x27;),<span class="string">&#x27;]&#x27;</span>];</span><br><span class="line">     <span class="built_in">disp</span>(str)</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    index = index + <span class="number">1</span>;</span><br><span class="line">    k = k + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>最优化方法</category>
      </categories>
      <tags>
        <tag>最优化算法</tag>
        <tag>matlab</tag>
      </tags>
  </entry>
</search>
